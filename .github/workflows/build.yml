name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: Build ${{ matrix.suffix }}
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            suffix: linux-x64
            runs_on: ubuntu-latest
            use_cross: false
          - target: aarch64-unknown-linux-gnu
            suffix: linux-arm64
            runs_on: ubuntu-latest
            use_cross: true
          - target: aarch64-linux-android
            suffix: android-arm64
            runs_on: ubuntu-latest
            use_cross: true
          - target: x86_64-apple-darwin
            suffix: macos-x64
            runs_on: macos-latest
            use_cross: false
          - target: aarch64-apple-darwin
            suffix: macos-arm64
            runs_on: macos-latest
            use_cross: false
          - target: x86_64-pc-windows-msvc
            suffix: windows-x64
            runs_on: windows-latest
            use_cross: false
          - target: aarch64-pc-windows-msvc
            suffix: windows-arm64
            runs_on: windows-latest
            use_cross: false
          - target: x86_64-unknown-freebsd
            suffix: freebsd-x64
            runs_on: ubuntu-latest
            use_cross: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use_cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        shell: bash
        env:
          TARGET: ${{ matrix.target }}
          SUFFIX: ${{ matrix.suffix }}
          USE_CROSS: ${{ matrix.use_cross == true && '1' || '0' }}
        run: ./build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: codex-litellm-${{ matrix.suffix }}
          path: |
            dist/codex-litellm-${{ matrix.suffix }}.tar.gz
            dist/codex-litellm-${{ matrix.suffix }}.tar.gz.sha256

  attach-release-assets:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish assets to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/codex-litellm-*.tar.gz
            dist/**/codex-litellm-*.tar.gz.sha256

  publish-npm:
    needs: attach-release-assets
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        env:
          CODEX_LITELLM_SKIP_DOWNLOAD: '1'
        run: npm install --ignore-scripts

      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
